(()=>{"use strict";window.addEventListener("load",(()=>{const t=document.querySelector(".loader");t.classList.add("loader--hidden"),t.addEventListener("transitionend",(()=>{document.body.removeChild(t)}))}));const t="https://notes-api.dicoding.dev/v2",e=(document.getElementById("listnotes"),async()=>{const e={method:"GET"};try{const a=await fetch(`${t}/notes`,e);if(!a.ok)throw new Error(`HTTP error! Status: ${a.status}`);const r=await a.json();r.error?o(r.message):n(r.data||[])}catch(t){console.error("Error fetching notes:",t),o("Failed to load notes. Please check your internet connection or try again later.")}}),n=t=>{const e=document.querySelector("#listnote");e.innerHTML="",t&&t.length>0?t.forEach((t=>{e.innerHTML+=`\n    <div class="Catatancontainer">\n    <div class="catatan">\n    <h3 class="judul-catatan">${t.title}</h3>\n    <p class="isi-catatan">${t.body}</p>\n    <button type="button" class="button-delete" id="${t.id}">Hapus</button>\n  </div>\n  </div>\n    `})):e.innerHTML="<p>Tidak ada catatan yang ditemukan.</p>",document.querySelectorAll(".button-delete").forEach((t=>{t.addEventListener("click",(t=>{const e=t.target.id;a(e)}))}))},o=(t="Check your internet connection")=>{alert(t)},a=async e=>{try{const n=await fetch(`${t}/notes/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json","X-Auth-Token":"YOUR_AUTH_TOKEN"}});if(!n.ok)throw new Error(`Failed to delete note: ${n.statusText}`);const o=await n.json(),a=document.getElementById(e);a?a.parentElement.remove():console.warn(`Note with ID ${e} not found in UI, but may be deleted on the server.`),console.log(`Note ${o?.id} (if available) deleted successfully.`)}catch(t){console.error("Error deleting note:",t),o("Failed to delete note. Please try again later.")}};document.addEventListener("DOMContentLoaded",(()=>{const n=document.querySelector("#judulCatatan"),a=document.querySelector("#isiCatatan");document.querySelector('form button[type="submit"]').addEventListener("click",(function(r){r.preventDefault(),(async n=>{try{const a={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)},r=await fetch(`${t}/notes`,a),s=await r.json();s.error?o(s.message):(e(),o("Catatan berhasil ditambahkan!"))}catch(t){o(t)}})({title:n.value,body:a.value}),n.value="",a.value=""})),e()}))})();